create schema if not exists openapi authorization postgres;

drop table if exists openapi.configuration;

create table openapi.configuration(
    Id int not null unique,
    Title varchar not null,
    Description varchar not null,
    TermsUrl varchar,
    ContactEmail varchar,
    LicenseName varchar,
    LicenseUrl varchar,
    SecurityType int,
    SecurityKeyName varchar,
    UrlFilter varchar not null,
    JsonEndpoint varchar not null,
    Created timestamp not null,
    CreatedBy varchar not null,
    Modified timestamp,
    ModifiedBy varchar
);

drop table if exists openapi.service;

create table openapi.service(
    Id SERIAL,
    Name varchar not null CONSTRAINT service_name_key UNIQUE,
    ServiceUrls varchar,
    Status int not null,
    JsonData text,
    Retry int not null default 0,
    Created timestamp not null,
    CreatedBy varchar not null,
    Modified timestamp,
    ModifiedBy varchar,
    Deleted timestamp,
    DeletedBy varchar,
    IsDelete bool default false not null
);

drop table if exists openapi.schema;

create table openapi.schema(
    Id SERIAL,
    JsonData text not null,
    Services int not null,
    Created timestamp not null,
    CreatedBy varchar not null,
    Modified timestamp,
    ModifiedBy varchar,
    Deleted timestamp,
    DeletedBy varchar,
    IsDelete bool default false not null
);
